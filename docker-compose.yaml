services:
  back:
    image: inksne/slink-back-image:latest
    container_name: back-container
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "10000:10000"
    env_file:
      - ./.env
    command: ["sh", "-c", "cd src && alembic upgrade head && cd slink && uvicorn main:app --host 0.0.0.0 --port 10000 --ssl-keyfile=/app/src/slink/certs/server.key --ssl-certfile=/app/src/slink/certs/server.crt"]
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: .
          target: /app
    networks:
      - app-network
      
  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network: